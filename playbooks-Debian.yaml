# Actualizar caché de los paquetes
- name: Actualizar caché de los repositorios
  apt:
    name: '*'
    state: latest
    update_cache: true
# Instalar MariaDB
- name: Instalación MariaDB
  apt:
          name:
            - mariadb-server
            - python3
            - python3-mysqldb
            - ufw
          state: latest

# Iniciar servicio MariaDB
- name: Iniciar servicio MariaDB
  service:
    name: mariadb
    enabled: true
    state: started
# Reiniciar el servicio de mariadb
- name: reiniciar servico MariaDB
  service:
    name: mariadb
    state: restarted
  tags: mariadb
      # Secure_installation y cambio de contraseña usuario root
- name: MySQL-secure_installation
  shell:
    echo -e "\nn\nY\nViewnext\nViewnext\nY\nn\nY\nY\n" | sudo mysql_secure_installation
  args:
    executable: /bin/bash
  tags: mariadb

# <--------------- IMPORTAR CONFIGURACIÓN A MARIADB DEBIAN ------------------------->

- name: Establecer configuración Mariadb Debian
  template:
          src: /home/vagrant/src/recursos/50-server-debian.cnf
          dest: /etc/mysql/mariadb.conf.d/50-server.cnf
          owner: root
          group: root
          mode: '0755'

- name: Reiniciar mariadb
  service:
          name: mariadb
          enabled: true
          state: restarted


# Creación de la base de datos de wordpress
- name: crear base de datos
  community.mysql.mysql_db:
    name: maria
    login_user: root
    login_password: Viewnext
    state: present
  tags: mariadb
# Usuario para la base de datos
- name: Crear usuario para base de datos de wordpress
  mysql_user:
    login_user: root
    login_password: Viewnext
    name: maria
    password: ccwp
    priv: 'maria.*:ALL,GRANT'
    host: '%'
    state: present
  tags: mariadb
# Habilitar MariaDb en Firewall
- name: Habilitar servicio mysql en firewall
  ufw:
    state: enabled
  tags: mariadb
# Abrir puerto 3306 en firewall para conexión remota
- name: abrir pueto 3306
  ufw:
    rule: allow
    port: 3306
  tags: mariadb
# Habilitar puerto 22 firewall
- name: Habilitar puerto 22
  ufw:
    rule: allow
    port: 22
# Reiniciar servicio firewall
- name: Reiniciar la configuración del firewall
  ufw:
    state: reloaded
  tags: mariadb

#     <--------------- CREACIÓN DEL FICHERO BACKUP EN CASO DE QUE NO EXISTA -------------->

- name: Crear directorio backup
  become: true
  file:
          path: /backup
          state: directory

#       <----------- COPIA DEL ÚLTIMO BACKUP DEL CONTROL NODE AL SERVIDOR REMOTO ----------->

- name: Copiar backup a servidor remoto Debian
  template:
          src: /home/vagrant/src/recursos/backup-file.sql
          dest: /backup/

#       <----------------------- RESTAURACIÓN DE LA BASE DE DATOS ---------------------->

- name: Restaurar base de datos
  mysql_db:
          login_user: root
          login_password: Viewnext
          name: maria
          state: import
          target: /backup/backup-file.sql
  
/*
- name: Cambiar la URL del sitio en la base de datos de WordPress

- name:    Instala el paquete python-mysqldb
  apt:
  name: python-mysqldb
  state: present
- name: Crea el archivo SQL
  copy:
  content: |
          USE nombre_de_tu_base_de_datos;
          UPDATE wp_options SET option_value='http://192.168.10.80' WHERE option_name='siteurl' OR option_name='home';
  dest: /tmp/commands.sql

    - name: Importar base de datos
  mysql_db:
    login_user: root
    login_password: Viewnext
    name: maria
    state: import
    target: /tmp/commands.sql
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Ejecutar archivo SQL
  command: mysql -u root -p"Viewnext" maria < /tmp/commands.sql

- name: Eliminar archivo SQL temporal
  file:
    path: /tmp/commands.sql
    state: absent
*\
